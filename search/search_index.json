{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projections avec les LLMs","text":"<p>Th\u00e8mes: Science de donn\u00e9es, G\u00e9nie logiciel, LLM   Superviseur: Louis Edouard Lafontant Collaborateurs: ...</p>"},{"location":"#equipe","title":"\u00c9quipe","text":"<p>Esteban Maries 20235999</p>"},{"location":"#description-du-projet","title":"Description du projet","text":""},{"location":"#contexte","title":"Contexte","text":"<p>Le domaine d'application de ce projet comprend l'Ing\u00e9nierie Logicielle ainsi que du Traitement Automatique du Langage Naturel (NLP), avec une emphase sur l'Analyse du Code Source et la Compr\u00e9hension de Programme. Alors que les syst\u00e8mes logiciels gagnent en complexit\u00e9, l'int\u00e9gration des Grands Mod\u00e8les de Langage (LLMs) dans les flux de travail d'analyse de code devient essentielle, presque obligatoire pour am\u00e9liorer l'efficacit\u00e9, la pr\u00e9cision et l'automatisation du code. </p> <p>Cependant, les d\u00e9veloppeurs passent beaucoup de temps \u00e0 chercher et dig\u00e9rer les informations du code source qui permettent d\u2019y contribuer ou de le comprendre, surtout lorsqu'ils travaillent avec du code peu familier ou des environnements complexes. </p> <p>Une approche propos\u00e9e pour att\u00e9nuer ce probl\u00e8me est le concept de projections de code. Ces projections permettent de visualiser le m\u00eame code source de multiples fa\u00e7ons dynamiques. Au lieu d'une structure rigide, le programmeur peut choisir une structure qu'il juge la plus pertinente pour sa t\u00e2che actuelle. </p> <p>Ce projet s'inscrit comme une extension possible du projet Gentleman visant \u00e0 rendre la mod\u00e9lisation plus accessible aux experts du domaine et aux praticiens.</p>"},{"location":"#problematique-ou-motivations","title":"Probl\u00e9matique ou motivations","text":""},{"location":"#problematique","title":"Probl\u00e9matique","text":"<p>La probl\u00e9matique principale que ce projet cherche \u00e0 r\u00e9soudre est de combler le foss\u00e9 qui existe entre la compr\u00e9hension profonde du code, fournie par les LLMs, et la pr\u00e9sentation structur\u00e9e et dynamique du code source, donn\u00e9 par Gentleman. Comment utiliser un LLM pour fournir les fragments de code pertinents et les pr\u00e9senter aux d\u00e9veloppeurs sous forme de projections compr\u00e9hensible ?</p>"},{"location":"#motivations","title":"Motivations","text":"<ol> <li> <p>Les d\u00e9veloppeurs passent un temps consid\u00e9rable \u00e0 comprendre le comportement et la logique du code pour faciliter son \u00e9dition et maintenance. En fournissant des projections cibl\u00e9es, l'outil pourrait r\u00e9duire consid\u00e9rablement la quantit\u00e9 de code \u00e0 parcourir par le d\u00e9veloppeur. </p> </li> <li> <p>Bien que les LLMs excellent \u00e0 expliquer le code en langage naturel, les requ\u00eates ouvertes peuvent encore n\u00e9cessiter un prompt engineering difficile, en particulier pour les novices. L'int\u00e9gration d'un m\u00e9canisme de projection permet de mat\u00e9rialiser l'analyse du LLM dans des vues concr\u00e8tes et interactives, offrant une assistance visuelle du code au d\u00e9veloppeur.</p> </li> </ol>"},{"location":"#proposition-et-objectifs","title":"Proposition et objectifs","text":""},{"location":"#proposition-solution","title":"Proposition solution","text":"<ol> <li> <p>Lecture et Contexte : Le syst\u00e8me lira le code source.</p> </li> <li> <p>Analyse par LLM : Un LLM analysera le code pour comprendre sa structure et sa fonctionnalit\u00e9, et pour identifier les fragments de code qui correspondent \u00e0 des pr\u00e9occupations s\u00e9mantiques implicites. Son importance, r\u00f4le dans le code</p> </li> <li> <p>Sortie des Projections : Les sorties du LLM seront donnes en deux fichiers un qui est les projections et l\u2019autre les concepts qui d\u00e9finiront le code source pour Gentleman. </p> </li> </ol>"},{"location":"#objectifs-concrets","title":"Objectifs Concrets","text":"<ol> <li> <p>D\u00e9finir et impl\u00e9menter une m\u00e9thodologie pour contextualiser le code source et formuler les requ\u00eates aupr\u00e8s du LLM afin que ce dernier puisse identifier les diff\u00e9rents fragments de code pertinents, ainsi que leurs liens dans le code source.</p> </li> <li> <p>Manier le LLM afin qu\u2019il renvoie dans le format attendu par Gentleman, c\u2019est \u00e0 dire un fichier projection et un fichier concept. Qui permettront \u00e0 Gentleman de modeler le code source donn\u00e9 par le d\u00e9veloppeur.</p> </li> </ol>"},{"location":"#echeancier","title":"\u00c9ch\u00e9ancier","text":"<p>Info</p> <p>Le suivi complet est disponible dans la page Suivi de projet.</p> Jalon (Milestone) Date pr\u00e9vue Livrable Statut Ouverture de projet 16 septembre Choix de projet \u2705 Termin\u00e9 Definir le projet 28 septembre Description du projet remis \u2705 Termin\u00e9 Definition de fonctions 5 octobre Document sur les fonctions \ud83d\udd04 En cours Choix LLM 5 octobre LLM \ud83d\udd04 En cours Essai de la LLM 8 septembre Resultats \u23f3 \u00c0 venir Architecture 30 septembre Diagramme UML ou mod\u00e8le C4 \u23f3 \u00c0 venir Mod\u00e8le de donne\u00e9s 6 octobre Diagramme UML ou entit\u00e9-association \u23f3 \u00c0 venir Revue de conception 6 octobre Feedback encadrant + ajustements \u23f3 \u00c0 venir Impl\u00e9mentation v1 20 octobre Application v1 \u23f3 \u00c0 venir Impl\u00e9mentation v2 + tests 11 novembre Application v2 + Tests \u23f3 \u00c0 venir Impl\u00e9mentation v3 1er d\u00e9cembre Version finale \u23f3 \u00c0 venir Tests 11-31 novembre Plan + R\u00e9sultats interm\u00e9diaires \u23f3 \u00c0 venir \u00c9valuation finale 8 d\u00e9cembre Analyse des r\u00e9sultats + Discussion \u23f3 \u00c0 venir Pr\u00e9sentation + Rapport 15 d\u00e9cembre Pr\u00e9sentation + Rapport \u23f3 \u00c0 venir"},{"location":"analysis/","title":"\u00c9tudes pr\u00e9liminaires","text":""},{"location":"analysis/#analyse-du-probleme","title":"Analyse du probl\u00e8me","text":"<ul> <li>D\u00e9crire le probl\u00e8me \u00e0 r\u00e9soudre.</li> </ul>"},{"location":"analysis/#exigences","title":"Exigences","text":"<ul> <li>Lister les exigences fonctionnelles et non fonctionnelles.</li> </ul>"},{"location":"analysis/#recherche-de-solutions","title":"Recherche de solutions","text":"<ul> <li>Pr\u00e9senter les solutions existantes et justifier le choix retenu.</li> </ul>"},{"location":"analysis/#methodologie","title":"M\u00e9thodologie","text":""},{"location":"conception/","title":"Conception","text":""},{"location":"conception/#architecture","title":"Architecture","text":"<ul> <li>D\u00e9crire l'architecture du syst\u00e8me propos\u00e9.</li> </ul>"},{"location":"conception/#choix-technologiques","title":"Choix technologiques","text":"<ul> <li>Justifier les technologies et outils choisis.</li> </ul>"},{"location":"conception/#modeles-et-diagrammes","title":"Mod\u00e8les et diagrammes","text":"<ul> <li>Inclure des diagrammes UML, maquettes, etc.</li> </ul>"},{"location":"conception/#prototype","title":"Prototype","text":"<ul> <li>Inclure des diagrammes UML, maquettes, etc.</li> </ul>"},{"location":"evaluation/","title":"\u00c9valuation","text":""},{"location":"evaluation/#plan-de-test","title":"Plan de test","text":"<ul> <li>D\u00e9crire la strat\u00e9gie de test.</li> </ul>"},{"location":"evaluation/#criteres-devaluation","title":"Crit\u00e8res d'\u00e9valuation","text":"<ul> <li>Pr\u00e9senter les crit\u00e8res utilis\u00e9s pour \u00e9valuer le syst\u00e8me.</li> </ul>"},{"location":"evaluation/#analyse-des-resultats","title":"Analyse des r\u00e9sultats","text":"<ul> <li>Discuter des r\u00e9sultats obtenus lors des tests.</li> </ul>"},{"location":"references/","title":"R\u00e9f\u00e9rences","text":"<ul> <li>Using an LLM to Help With Code Understanding</li> <li>Toward Intelligent Generation of Tailored Graphical Concrete Syntax</li> <li>Large Language Models (LLMs) for Source Code Analysis: applications, models and datasets</li> <li>Leveraging Program Comprehension with Concern-oriented Source Code Projections</li> <li>Inclure des liens vers des sites web, outils ou technologies utilis\u00e9s.</li> </ul>"},{"location":"resources/","title":"Resources","text":"<pre><code>graph TD\n    A[Start] --&gt; B{Decision}\n    B --&gt;|Yes| C[Continue]\n    B --&gt;|No| D[Stop]\n</code></pre> <pre><code>pie title Which animals do you prefer as pets?\n    \"Dogs\" : 386\n    \"Cats\" : 85\n    \"Rabbits\" : 53\n    \"Hamsters\" : 101\n</code></pre>"},{"location":"resources/#why-its-useful-in-ift3150","title":"Why it's useful in IFT3150:","text":"<p>For computer science projects, visualizing algorithms, data flow, or system architecture is key. Mermaid lets students easily include diagrams without needing external images.</p>"},{"location":"resources/#pymdown-extensions","title":"\u2705 <code>pymdown-extensions</code>","text":"<p>This is a collection of enhanced Markdown extensions, mostly used with Material for MkDocs. It enables:</p> <ul> <li>Better code highlighting with <code>superfences</code></li> <li>Tabs in Markdown (<code>tabbed</code>)</li> <li>Collapsible sections (<code>details</code>)</li> <li>Checkboxes for task lists (<code>tasklist</code>)</li> <li>Emoji support</li> <li>Keyboard key notation (<code>keys</code>)</li> <li>And many more UX-friendly features</li> </ul>"},{"location":"resources/#example-use-cases","title":"\ud83d\udd27 Example use cases:","text":"Python <pre><code>def hello():\n    print(\"Hello, world!\")\n</code></pre> Java <pre><code>public class Hello {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, world!\");\n    }\n}\n</code></pre> <p>Note</p> <p>This is an important note for the reader.</p>"},{"location":"results/","title":"R\u00e9sultats","text":""},{"location":"results/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":"<ul> <li>D\u00e9crire les fonctionnalit\u00e9s impl\u00e9ment\u00e9es.</li> </ul>"},{"location":"results/#demonstration","title":"D\u00e9monstration","text":"<ul> <li>Inclure des captures d'\u00e9cran ou des d\u00e9monstrations du syst\u00e8me.</li> </ul>"},{"location":"suivi/","title":"Suivi de projet","text":""},{"location":"suivi/#semaine-1","title":"Semaine 1","text":"<p>Notes</p> <ul> <li>Lecture de la documentation sur les LLMs, leurs usage sur du code ainsi que celle sur Gentleman.</li> <li>Ecriture de la description du projet</li> </ul> <p>Prochaines \u00e9tapes</p> <ul> <li>Choisir une LLM pour le projet</li> <li>Definir les fonctions dans le code</li> <li>Essayer la LLM</li> </ul>"},{"location":"suivi/#semaine-3","title":"Semaine 3","text":"<p>Notes</p> <ul> <li>Definition de differents types de foncitons pour la LLM</li> <li>Choix et essai de la LLM</li> </ul>"},{"location":"suivi/#semaine-5","title":"Semaine 5","text":""},{"location":"suivi/#semaine-7","title":"Semaine 7","text":""},{"location":"suivi/#semaine-9","title":"Semaine 9","text":""},{"location":"suivi/#semaine-11","title":"Semaine 11","text":""},{"location":"suivi/#semaine-13","title":"Semaine 13","text":""}]}