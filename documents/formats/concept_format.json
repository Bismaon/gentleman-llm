{
    "type": "object",
    "concept": [
        {
            "name": "model element",
            "nature": "prototype",
            "description": "The most abstract element of the Gentleman metamodel. All concepts inherit from it, including primitives and structures.",
            "attributes": [
                {
                    "name": "name",
                    "target": {
                        "name": "name"
                    },
                    "required": true
                },
                {
                    "name": "description",
                    "target": {
                        "name": "string"
                    },
                    "required": true
                }
            ]
        },
        {
            "name": "model concept",
            "nature": "prototype",
            "description": "Base prototype for all definable model concepts. Represents a composable unit with properties and optional root status.",
            "prototype": "model element",
            "attributes": [
                {
                    "name": "root",
                    "target": {
                        "name": "boolean",
                        "default": false
                    }
                },
                {
                    "name": "properties",
                    "target": {
                        "name": "set",
                        "accept": {
                            "name": "property"
                        }
                    },
                    "required": true
                }
            ]
        },
        {
            "name": "prototype-concept",
            "nature": "concrete",
            "description": "Reusable template concept providing structural inheritance to other concepts. Acts as a base skeleton in the model graph.",
            "prototype": "model concept",
            "root": true,
            "attributes": [
                {
                    "name": "attributes",
                    "target": {
                        "name": "set",
                        "accept": {
                            "name": "attribute"
                        }
                    },
                    "required": true
                },
                {
                    "name": "prototype",
                    "target": {
                        "name": "reference",
                        "accept": {
                            "name": "prototype-concept"
                        }
                    },
                    "required": false
                }
            ],
            "properties": [
                {
                    "name": "nature",
                    "type": "string",
                    "value": "prototype"
                }
            ]
        },
        {
            "name": "concrete-concept",
            "nature": "concrete",
            "description": "User-defined concept representing actual model structures. Instantiable and targetable by projections.",
            "prototype": "model concept",
            "root": true,
            "attributes": [
                {
                    "name": "attributes",
                    "target": {
                        "name": "set",
                        "accept": {
                            "name": "attribute"
                        }
                    },
                    "required": true
                },
                {
                    "name": "prototype",
                    "target": {
                        "name": "reference",
                        "accept": {
                            "name": "prototype-concept"
                        }
                    },
                    "required": false
                }
            ],
            "properties": [
                {
                    "name": "nature",
                    "type": "string",
                    "value": "concrete"
                }
            ]
        },
        {
            "name": "derivative-concept",
            "nature": "concrete",
            "description": "A specialization of another concept (usually a primitive) through added constraints or enumerated values.",
            "prototype": "model concept",
            "root": true,
            "attributes": [
                {
                    "name": "base",
                    "target": {
                        "name": "primitive",
                        "accept": [
                            {
                                "name": "string primitive"
                            },
                            {
                                "name": "number primitive"
                            }
                        ]
                    },
                    "required": true
                }
            ],
            "properties": [
                {
                    "name": "nature",
                    "type": "string",
                    "value": "derivative"
                }
            ]
        },
        {
            "name": "structure",
            "nature": "prototype",
            "description": "Abstract prototype for all relations between concepts (attributes and properties).",
            "prototype": "model element",
            "attributes": [
                {
                    "name": "alias",
                    "target": {
                        "name": "string"
                    },
                    "required": false,
                    "description": "The alias of the structure."
                }
            ]
        },
        {
            "name": "attribute",
            "nature": "concrete",
            "description": "External relation of a concept. Represents data provided by the end-user or environment.",
            "prototype": "structure",
            "attributes": [
                {
                    "name": "required",
                    "target": {
                        "name": "boolean"
                    },
                    "required": true,
                    "description": "Whether the attribute must be present in all instances."
                },
                {
                    "name": "target",
                    "target": {
                        "name": "primitive"
                    },
                    "required": true,
                    "description": "The primitive or concept targeted by this attribute."
                }
            ]
        },
        {
            "name": "property",
            "nature": "concrete",
            "description": "Internal relation of a concept. Represents intrinsic or computed data always available in each instance.",
            "prototype": "structure",
            "attributes": [
                {
                    "name": "target",
                    "target": {
                        "name": "value"
                    },
                    "required": true,
                    "description": "The value type returned by the property."
                }
            ]
        },
        {
            "name": "constraint",
            "nature": "concrete",
            "description": "Defines a rule restricting possible values or structures of concepts or relations.",
            "attributes": [
                {
                    "name": "property",
                    "target": {
                        "name": "string",
                        "constraint": {
                            "values": [
                                "length",
                                "value",
                                "values"
                            ]
                        }
                    }
                },
                {
                    "name": "type",
                    "target": {
                        "name": "constraint-type"
                    }
                }
            ]
        },
        {
            "name": "primitive",
            "nature": "prototype",
            "description": "The base prototype for all atomic self-defined types. Serves as the foundation for String, Number, Boolean, Set, and Reference.",
            "attributes": []
        },
        {
            "name": "string primitive",
            "nature": "concrete",
            "description": "Primitive concept representing textual data. Can be constrained by length, pattern, or allowed values.",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "default",
                    "target": {
                        "name": "string"
                    }
                },
                {
                    "name": "constraints",
                    "target": {
                        "name": "set",
                        "accept": {
                            "name": "constraint",
                            "args": [
                                {
                                    "name": "property",
                                    "constraint": {
                                        "values": [
                                            "length",
                                            "value"
                                        ]
                                    }
                                },
                                {
                                    "name": "type",
                                    "rules": [
                                        {
                                            "type": "eq",
                                            "eq": [
                                                {
                                                    "type": "attribute",
                                                    "attribute": "property"
                                                },
                                                "length"
                                            ],
                                            "value": [
                                                "constraint-number-value",
                                                "constraint-number-range"
                                            ]
                                        },
                                        {
                                            "type": "eq",
                                            "eq": [
                                                {
                                                    "type": "attribute",
                                                    "attribute": "property"
                                                },
                                                "value"
                                            ],
                                            "value": [
                                                "constraint-string-pattern",
                                                "constraint-string-match",
                                                "constraint-string-values"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "string"
                }
            ]
        },
        {
            "name": "number primitive",
            "nature": "concrete",
            "description": "Primitive concept representing numeric values. Supports range and exact value constraints.",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "default",
                    "target": {
                        "name": "number"
                    }
                },
                {
                    "name": "constraint",
                    "target": {
                        "name": "constraint",
                        "args": [
                            {
                                "name": "property",
                                "constraint": {
                                    "values": [
                                        "value"
                                    ]
                                }
                            },
                            {
                                "name": "type",
                                "rules": [
                                    {
                                        "type": "eq",
                                        "eq": [
                                            {
                                                "type": "attribute",
                                                "attribute": "property"
                                            },
                                            "value"
                                        ],
                                        "value": [
                                            "constraint-number-value",
                                            "constraint-number-range"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "number"
                }
            ]
        },
        {
            "name": "boolean primitive",
            "nature": "concrete",
            "description": "Primitive concept representing a truth value (true/false).",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "default",
                    "target": {
                        "name": "boolean"
                    }
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "boolean"
                }
            ]
        },
        {
            "name": "set primitive",
            "nature": "concrete",
            "description": "Primitive concept representing an unordered or ordered collection of elements. Accepts any concept as member type and may define cardinality constraints.",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "accept",
                    "target": {
                        "name": "primitive"
                    },
                    "required": true
                },
                {
                    "name": "ordered",
                    "target": {
                        "name": "boolean",
                        "default": true
                    },
                    "required": true
                },
                {
                    "name": "constraint",
                    "target": {
                        "name": "constraint",
                        "args": [
                            {
                                "name": "property",
                                "constraint": {
                                    "values": [
                                        "cardinality"
                                    ]
                                }
                            },
                            {
                                "name": "type",
                                "rules": [
                                    {
                                        "type": "eq",
                                        "eq": [
                                            {
                                                "type": "attribute",
                                                "attribute": "property"
                                            },
                                            "cardinality"
                                        ],
                                        "value": [
                                            "constraint-number-value",
                                            "constraint-number-range"
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "set"
                }
            ]
        },
        {
            "name": "reference primitive",
            "nature": "concrete",
            "description": "Primitive concept that explicitly defines a link to another concept or scope. Enables direct reference manipulation within models.",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "accept",
                    "target": {
                        "name": "name",
                        "constraint": {
                            "values": [
                                "string",
                                "number",
                                "boolean",
                                "set",
                                "reference",
                                "any",
                                {
                                    "type": "reference",
                                    "rel": "parent",
                                    "scope": "model concept"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "scope",
                    "target": {
                        "name": "string",
                        "constraint": {
                            "values": [
                                "model",
                                {
                                    "type": "reference",
                                    "rel": "parent",
                                    "scope": "model concept"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "rel",
                    "target": {
                        "name": "string",
                        "constraint": {
                            "values": [
                                "parent",
                                "child",
                                "sibling"
                            ]
                        }
                    }
                },
                {
                    "name": "value",
                    "target": {
                        "name": "string"
                    }
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "reference"
                }
            ]
        },
        {
            "name": "concept primitive",
            "nature": "concrete",
            "description": "Primitive referencing another concept by name, enabling reflective relations and meta-model introspection.",
            "prototype": "primitive",
            "attributes": [
                {
                    "name": "concept",
                    "target": {
                        "name": "string",
                        "src": [
                            {
                                "type": "concept",
                                "concept": {
                                    "prototype": "model concept"
                                },
                                "value": {
                                    "type": "attribute",
                                    "name": "name"
                                }
                            }
                        ]
                    },
                    "required": true
                }
            ],
            "properties": [
                {
                    "name": "cname",
                    "type": "string",
                    "value": "concept"
                }
            ]
        },
        {
            "name": "constraint-type",
            "nature": "prototype",
            "description": "Prototype grouping all specific constraint implementations (value, range, pattern, etc.).",
            "attributes": []
        },
        {
            "name": "constraint-number-value",
            "nature": "concrete",
            "description": "Constraint limiting a number primitive to a specific value.",
            "prototype": "constraint-type",
            "attributes": [
                {
                    "name": "value",
                    "target": {
                        "name": "number"
                    }
                }
            ]
        },
        {
            "name": "constraint-number-range",
            "nature": "concrete",
            "description": "Constraint restricting a number primitive to a minimum and maximum bound.",
            "prototype": "constraint-type",
            "attributes": [
                {
                    "name": "min",
                    "target": {
                        "name": "number"
                    }
                },
                {
                    "name": "max",
                    "target": {
                        "name": "number"
                    }
                }
            ]
        },
        {
            "name": "constraint-string-pattern",
            "nature": "concrete",
            "description": "Constraint enforcing that a string matches a regular expression or specific pattern.",
            "prototype": "constraint-type",
            "attributes": [
                {
                    "name": "value",
                    "target": {
                        "name": "string"
                    }
                },
                {
                    "name": "insensitive",
                    "target": {
                        "name": "boolean"
                    }
                },
                {
                    "name": "global",
                    "target": {
                        "name": "boolean"
                    }
                }
            ]
        },
        {
            "name": "constraint-string-values",
            "nature": "concrete",
            "description": "Constraint defining an enumeration of valid string values.",
            "prototype": "constraint-type",
            "attributes": [
                {
                    "name": "values",
                    "target": {
                        "name": "set",
                        "accept": {
                            "name": "string"
                        },
                        "constraint": {
                            "cardinality": {
                                "type": "range",
                                "range": {
                                    "min": {
                                        "value": 1
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        },
        {
            "name": "value",
            "nature": "prototype",
            "description": "Prototype representing any literal or computed value used by a property or primitive.",
            "attributes": []
        },
        {
            "name": "string-value",
            "nature": "concrete",
            "description": "Concrete value holding a string literal.",
            "prototype": "value",
            "attributes": [
                {
                    "name": "value",
                    "target": {
                        "name": "string"
                    }
                }
            ],
            "properties": [
                {
                    "name": "type",
                    "type": "string",
                    "value": "string"
                }
            ]
        },
        {
            "name": "number-value",
            "nature": "concrete",
            "description": "Concrete value holding a numeric literal.",
            "prototype": "value",
            "attributes": [
                {
                    "name": "value",
                    "target": {
                        "name": "number"
                    }
                }
            ],
            "properties": [
                {
                    "name": "type",
                    "type": "string",
                    "value": "number"
                }
            ]
        },
        {
            "name": "name",
            "nature": "derivative",
            "description": "Derivative of String that constrains textual identifiers to 1-50 characters. Used to uniquely name concepts and relations.",
            "base": "string",
            "constraint": {
                "length": {
                    "type": "range",
                    "range": {
                        "min": {
                            "value": 1
                        },
                        "max": {
                            "value": 50
                        }
                    }
                }
            }
        }
    ]
}