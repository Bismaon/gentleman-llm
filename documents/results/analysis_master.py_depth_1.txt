FUNCTION_INSTANCE_START
{
    "name": "main",
    "function_type": "ExternalInteraction",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "root",
            "type": "str"
        },
        {
            "name": "import_links_directory",
            "type": "str"
        },
        {
            "name": "schedule_raw_directory",
            "type": "str"
        },
        {
            "name": "schedule_parsed_directory",
            "type": "str"
        },
        {
            "name": "annuaire_raw_directory",
            "type": "str"
        },
        {
            "name": "annuaire_parsed_directory",
            "type": "str"
        },
        {
            "name": "repertoire_raw_directory",
            "type": "str"
        },
        {
            "name": "repertoire_parsed_directory",
            "type": "str"
        },
        {
            "name": "hierarchy_path",
            "type": "str"
        },
        {
            "name": "debug",
            "type": "bool"
        }
    ],
    "return_type": "None",
    "description": "Main function to parse the raw data and populate the database.",
    "tags": ["database", "parsing", "main"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the main function pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": ["store_data", "log_insertion_details"]
        }
    ],
    "reasoning": "classified as ExternalInteraction because it performs external communication with the MongoDB database."
}

FUNCTION_INSTANCE_START
{
    "name": "store_data",
    "function_type": "ExternalInteraction",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "master_data",
            "type": "dict"
        },
        {
            "name": "annuaire",
            "type": "list"
        },
        {
            "name": "faculties",
            "type": "list"
        },
        {
            "name": "schedule_dict",
            "type": "dict"
        },
        {
            "name": "db",
            "type": "MongoDB"
        }
    ],
    "return_type": "None",
    "description": "Store the data in the database.",
    "tags": ["database", "store"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the store data pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": []
        }
    ],
    "reasoning": "classified as ExternalInteraction because it performs external communication with the MongoDB database."
}

FUNCTION_INSTANCE_START
{
    "name": "log_insertion_details",
    "function_type": "ExternalInteraction",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "schedule_diff",
            "type": "set"
        },
        {
            "name": "annuaire_diff",
            "type": "set"
        }
    ],
    "return_type": "None",
    "description": "Log insertion details.",
    "tags": ["logging", "details"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the log insertion details pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": []
        }
    ],
    "reasoning": "classified as ExternalInteraction because it performs external communication with the logging system."
}

FUNCTION_INSTANCE_START
{
    "name": "find_in_sorted_list",
    "function_type": "PureUtility",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "elem",
            "type": "str"
        },
        {
            "name": "sorted_list",
            "type": "list"
        }
    ],
    "return_type": "int",
    "description": "Locate the leftmost value exactly equal to x.",
    "tags": ["sorting", "finding", "utility"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the find in sorted list pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": []
        }
    ],
    "reasoning": "classified as PureUtility because it performs a simple utility task without any external interaction or side effects."
}

FUNCTION_INSTANCE_START
{
    "name": "refactor_faculties",
    "function_type": "ExternalInteraction",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "faculties",
            "type": "list"
        },
        {
            "name": "annuaires",
            "type": "dict"
        },
        {
            "name": "directories_tuples",
            "type": "list"
        }
    ],
    "return_type": "list",
    "description": "Refactor faculties based on the annuaires and directories.",
    "tags": ["refactoring", "faculties", "annuaires"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the refactor faculties pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": []
        }
    ],
    "reasoning": "classified as ExternalInteraction because it performs external communication with the directories and annuaires."
}

FUNCTION_INSTANCE_START
{
    "name": "readImportLinks",
    "function_type": "PureUtility",
    "nature": "Concrete",
    "parameters": [
        {
            "name": "directories_tuples",
            "type": "list"
        }
    ],
    "return_type": "dict",
    "description": "Read import links from directories.",
    "tags": ["reading", "links", "directories"],
    "constraints": [
        {
            "type": "Pattern",
            "details": "Follows the read import links pattern with required parameters and return type."
        }
    ],
    "relations": [
        {
            "calls": []
        }
    ],
    "reasoning": "classified as PureUtility because it performs a simple utility task without any external interaction or side effects."
}

FUNCTION_INSTANCE_END